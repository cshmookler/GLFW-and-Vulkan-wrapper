---
Checks: '
    clang-diagnostic-*,
    clang-analyzer-*,
    cppcoreguidelines-*,
    llvm-namespace-comment,
    modernize-*,
    performance-*,
    readability-*,
    -modernize-use-trailing-return-type,
    -cppcoreguidelines-avoid-const-or-ref-data-members,
    -cppcoreguidelines-interfaces-global-init,
    -readability-simplify-boolean-expr
'
CheckOptions: [
    { key: readability-identifier-naming.NamespaceCase,         value: lower_case },
    # { key: readability-identifier-naming.PrivateMemberSuffix,   value: _          },
    # { key: readability-identifier-naming.ProtectedMemberSuffix, value: _          },
    { key: readability-identifier-naming.MemberCase,            value: camelBack },
    { key: readability-identifier-naming.ConstantCase,          value: UPPER_CASE },
    { key: readability-identifier-naming.VariableCase,          value: camelBack  },
    { key: readability-identifier-naming.ParameterCase,         value: Camel_Snake_Case },
    { key: readability-identifier-naming.GlobalVariableCase,    value: UPPER_CASE },
    { key: readability-identifier-naming.StructCase,            value: lower_case },
    { key: readability-identifier-naming.ClassCase,             value: lower_case },
    { key: readability-identifier-naming.UnionCase,             value: lower_case },
    { key: readability-identifier-naming.EnumCase,              value: lower_case },
    { key: readability-identifier-naming.FunctionCase,          value: CamelCase  },
    # { key: readability-identifier-naming.PrivateMethodSuffix,   value: _          },
    # { key: readability-identifier-naming.ProtectedMethodSuffix, value: _          },
    { key: readability-identifier-naming.MethodCase,            value: CamelCase  },
    { key: readability-identifier-naming.TypedefCase,           value: lower_case },
    { key: readability-identifier-naming.TemplateParameterCase, value: CamelCase  }
]
WarningsAsErrors: '*'
HeaderFilterRegex: ''
FormatStyle: none